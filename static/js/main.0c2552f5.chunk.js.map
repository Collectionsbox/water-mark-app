{"version":3,"sources":["components/Edit.module.css","components/common/FileInput.module.css","constants/ActionType.js","util/Util.js","core/Track.js","core/Canvas.js","core/WMImage.js","core/Sprite.js","store/Store.js","redux/reducers/edit.reducer.js","redux/reducers/root.reducer.js","components/Edit.js","redux/actions/EditAction.js","components/common/FileInput.js","components/Resource.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","trackView","editContent","edit","file","ActionType","Util","getImageInfo","imageSrc","success","error","image","Image","onload","width","height","onerror","alert","src","isPointInRect","point","rect","x","y","addEvent","target","eventType","func","stopPropagation","arguments","length","undefined","addEventListener","removeEvent","removeEventListener","Track","Object","classCallCheck","this","element","trackLineColor","trackLineOverColor","trackLineWidth","trackNodeRadius","trackNodeColor","trackNodeActiveColor","trackNodeCollection","init","key","document","createElement","style","setProperty","Track_NODE","value","node","createTrackNode","appendChild","push","pos","view","relativeRect","rotation","withNode","activeNode","i","_this$getRect","getRect","parentNode","remove","_this$getRect2","pointInNode","w","h","_view$getBoundingClie","getBoundingClientRect","LEFT_TOP","CENTER_TOP","RIGHT_TOP","RIGHT_CENTER","RIGHT_BOTTOM","CENTER_BOTTOM","LEFT_BOTTOM","LEFT_CENTER","CENTER","NONE","Canvas","sprites","selectedIndex","canvas","context","getContext","trackNode","size","viewSize","oldSize","forEach","sprite","_sprite$getRelativeRe","getRelativeRect","updateRelativeRect","clearRect","_this","drawSprite","draw","delete","splice","hasFound","clearTrack","trackNodePoint","drawTrack","offset","_this$getSize","getSize","offsetPoint","selectedSp","move","resize","_this2","overSprite","index","WMImage","props","possibleConstructorReturn","getPrototypeOf","call","blobUrl","r","clientWidth","clientHeight","oriH","console","log","initRelativeRect","naturalWidth","naturalHeight","ctx","posX","posY","sizeW","sizeH","drawImage","Sprite","layerIndex","track","objectSpread","deg","keepRatio","oriW","isAdd","Math","abs","selfSize","_this$relativeRect","clear","nodePoint","_this$relativeRect2","newRelativeRect","oldCenterPoint","editCanvas","Store","getCanvas","initTrackView","updateAllSpriteRelativeRect","setSize","setSource","addSprite","deleteSpite","drop","dropUp","mouseOver","drag","exportCanvas","_canvas$getSize","toBlob","data","URL","createObjectURL","a","download","body","href","click","revokeObjectURL","initState","editImage","combineReducers","state","action","type","_action$editImageSize","editImageSize","Edit","mouseDown","e","isMouseDown","getPoint","mouseUp","mouseDownInCanvas","mouseUpInCanvas","mouseMove","mouseMoveInCanvas","mouseOverInCanvas","keyDown","deleteSelectedSprite","_this$editCanvas$getB","left","top","clientX","clientY","drawEditImage","info","redraw","initEditView","prevProps","prevState","snapshot","react_default","ref","ele","onMouseDown","className","Component","connect","dispatch","initEditViewAction","dropAction","dragAction","overAction","FileInput","triggerClick","input","_this$props","accept","dataChange","onChange","Resource","bgHandleClick","bgImage","wmHandleClick","wmImage","bgDataChange","files","addEditImage","wmDataChange","addWMImage","export","exportImage","react","onClick","common_FileInput","getState","store","createStore","rootReducer","applyMiddleware","thunk","App","es","components_Edit","components_Resource","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c2552f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Edit_container__11bLB\",\"trackView\":\"Edit_trackView__3RiRA\",\"editContent\":\"Edit_editContent__1mKRe\",\"edit\":\"Edit_edit__3xV1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file\":\"FileInput_file__1WOg1\"};","export default  {\r\n    ADD_EDIT_IMAGE: \"ADD_EDIT_IMAGE\",\r\n    ADD_WM_IMAGE: \"ADD_WM_IMAGE\",\r\n    INIT_EDIT_VIEW: \"INIT_EDIT_VIEW\",\r\n    REDRAW: \"REDRAW\",\r\n    EDIT_DROP: \"EDIT_DROP\",\r\n    EDIT_DRAG: \"EDIT_DRAG\",\r\n    EDIT_UP: \"EDIT_UP\",\r\n    EDIT_OVER: \"EDIT_OVER\",\r\n    DELETE_SELECTED_SPRITE: \"DELETE_SELECTED_SPRITE\",\r\n    EXPORT: \"EXPORT\",\r\n}","export default {\r\n    getImageInfo: function (imageSrc, success, error) {\r\n        let image = new Image();\r\n        image.onload = () => {\r\n            success({width: image.width, height: image.height, image: image});\r\n        };\r\n        image.onerror = () => {\r\n            alert('Not Support!');\r\n        };\r\n        image.src = imageSrc;\r\n    },\r\n    isPointInRect: function (point, rect) {\r\n        let {x, y, width, height} = rect;\r\n        return point.x >= x && point.x <= x + width && point.y >= y && point.y <= y + height;\r\n    },\r\n    addEvent: function (target, eventType, func, stopPropagation = true) {\r\n        target.addEventListener(eventType, func, stopPropagation);\r\n    },\r\n    removeEvent: function (target, eventType, func, stopPropagation = true) {\r\n        target.removeEventListener(eventType, func, stopPropagation);\r\n    },\r\n}","import Util from '../util/Util'\r\n\r\nclass Track {\r\n    constructor() {\r\n        this.element = null;\r\n        this.trackLineColor = '#ee3960';\r\n        this.trackLineOverColor = '#5E5E5E';\r\n        this.trackLineWidth = 2;\r\n        this.trackNodeRadius = 8;\r\n        this.trackNodeColor = '#AEAEAE';\r\n        this.trackNodeActiveColor = '#26ADEE';\r\n        this.trackNodeCollection = [];\r\n        this.init();\r\n    }\r\n\r\n    init () {\r\n        this.element = document.createElement('div');\r\n        this.element.style.setProperty('border', this.trackLineWidth + 'px dashed ' + this.trackLineColor);\r\n        this.element.style.setProperty('position', 'absolute');\r\n        for (let key in Track.Track_NODE) {\r\n            let value = Track.Track_NODE[key];\r\n            if (value >= 0 && value <= 7) {\r\n                let node = null;\r\n                switch (value) {\r\n                    case 0:\r\n                        node = this.createTrackNode({x: 0, y: 0});\r\n                        break;\r\n                    case 1:\r\n                        node = this.createTrackNode({x: '50%', y: 0});\r\n                        break;\r\n                    case 2:\r\n                        node = this.createTrackNode({x: '100%', y: 0});\r\n                        break;\r\n                    case 3:\r\n                        node = this.createTrackNode({x: '100%', y: '50%'});\r\n                        break;\r\n                    case 4:\r\n                        node = this.createTrackNode({x: '100%', y: '100%'});\r\n                        break;\r\n                    case 5:\r\n                        node = this.createTrackNode({x: '50%', y: '100%'});\r\n                        break;\r\n                    case 6:\r\n                        node = this.createTrackNode({x: 0, y: '100%'});\r\n                        break;\r\n                    case 7:\r\n                        node = this.createTrackNode({x: 0, y: '50%'});\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.element.appendChild(node);\r\n                this.trackNodeCollection.push(node);\r\n            }\r\n        }\r\n    }\r\n    createTrackNode (pos) {\r\n        let {x, y} = pos;\r\n        let node = document.createElement('div');\r\n        node.style.setProperty('border-radius', '50%');\r\n        node.style.setProperty('border', '1px solid #000000');\r\n        node.style.setProperty('width', (this.trackNodeRadius * 2) + 'px');\r\n        node.style.setProperty('height', (this.trackNodeRadius * 2) + 'px');\r\n        node.style.setProperty('background-color', this.trackNodeColor);\r\n        node.style.setProperty('position', 'absolute');\r\n        node.style.setProperty('left', x);\r\n        node.style.setProperty('top', y);\r\n        node.style.setProperty('transform', 'translate(-50%, -50%)');\r\n        return node;\r\n    }\r\n    draw (view, relativeRect, rotation = 0, withNode, activeNode) {\r\n        view.appendChild(this.element);\r\n        for (let i = 0; i < this.trackNodeCollection.length; i++) {\r\n            this.trackNodeCollection[i].style.setProperty('display', withNode ? 'block' : 'none');\r\n            this.trackNodeCollection[i].style.setProperty('background-color', activeNode === i ?\r\n                this.trackNodeActiveColor : this.trackNodeColor);\r\n        }\r\n        let {x, y, width, height} = this.getRect(view, relativeRect);\r\n        this.element.style.setProperty('border-color', withNode ? this.trackLineColor : this.trackLineOverColor);\r\n        this.element.style.setProperty('left', x + 'px');\r\n        this.element.style.setProperty('top', y + 'px');\r\n        this.element.style.setProperty('width', width + 'px');\r\n        this.element.style.setProperty('height', height + 'px');\r\n        this.element.style.setProperty('transform', 'rotate(' + rotation + ')');\r\n    }\r\n    clear () {\r\n        if (this.element.parentNode) {\r\n            this.element.remove();\r\n        }\r\n    }\r\n    nodePoint (view, relativeRect, rotation, point) {\r\n        let {x, y, width, height} = this.getRect(view, relativeRect);\r\n        let node = -1;\r\n        if (this.pointInNode({x: x, y: y}, point)) {\r\n            node = 0;\r\n        } else if (this.pointInNode({x: x + width / 2, y: y}, point)) {\r\n            node = 1;\r\n        } else if (this.pointInNode({x: x + width, y: y}, point)) {\r\n            node = 2;\r\n        } else if (this.pointInNode({x: x + width, y: y + height / 2}, point)) {\r\n            node = 3;\r\n        } else if (this.pointInNode({x: x + width, y: y + height}, point)) {\r\n            node = 4;\r\n        } else if (this.pointInNode({x: x + width / 2, y: y + height}, point)) {\r\n            node = 5;\r\n        } else if (this.pointInNode({x: x, y: y + height}, point)) {\r\n            node = 6;\r\n        } else if (this.pointInNode({x: x, y: y + height / 2}, point)) {\r\n            node = 7;\r\n        } else if (Util.isPointInRect(point, {x, y, width, height}, point)) {\r\n            node = 8;\r\n        } else {\r\n            node = -1;\r\n        }\r\n        return node;\r\n    }\r\n    pointInNode (pos, point) {\r\n        let {x, y} = pos;\r\n        return Util.isPointInRect(point, {x: x - this.trackNodeRadius, y: y - this.trackNodeRadius, width: this.trackNodeRadius * 2, height: this.trackNodeRadius * 2})\r\n    }\r\n\r\n    getRect (view, relativeRect) {\r\n        let {x, y, w, h} = relativeRect;\r\n        let {width, height} = view.getBoundingClientRect();\r\n        return {\r\n            x: x * width,\r\n            y: y * height,\r\n            width: w * width,\r\n            height: h * height,\r\n        }\r\n    }\r\n}\r\n\r\nTrack.Track_NODE = {\r\n    LEFT_TOP: 0,\r\n    CENTER_TOP: 1,\r\n    RIGHT_TOP: 2,\r\n    RIGHT_CENTER: 3,\r\n    RIGHT_BOTTOM: 4,\r\n    CENTER_BOTTOM:5,\r\n    LEFT_BOTTOM: 6,\r\n    LEFT_CENTER: 7,\r\n    CENTER: 8,\r\n    NONE: -1,\r\n};\r\n\r\nexport default Track;","import Track from './Track'\r\n\r\nclass Canvas {\r\n    constructor () {\r\n        this.sprites = [];\r\n        this.selectedIndex = -1;\r\n        this.canvas = document.createElement('canvas');\r\n        this.context = this.canvas.getContext('2d');\r\n        this.trackView = null;\r\n        this.trackNode = -1;\r\n    }\r\n\r\n    getCanvas () {\r\n        return this.canvas;\r\n    }\r\n    getContext () {\r\n        return this.context;\r\n    }\r\n    setSize (size) {\r\n        this.canvas.width = size.width;\r\n        this.canvas.height = size.height;\r\n    }\r\n    getSize () {\r\n        return {\r\n            width: this.canvas.width,\r\n            height: this.canvas.height,\r\n        }\r\n    }\r\n    updateAllSpriteRelativeRect (viewSize, oldSize) {\r\n        this.sprites.forEach((sprite) => {\r\n            let {w, h} = sprite.getRelativeRect();\r\n            sprite.updateRelativeRect(viewSize, {width: w * oldSize.width, height: h * oldSize.height});\r\n        });\r\n    }\r\n    clear () {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n    draw () {\r\n        this.sprites.forEach((sprite) => {\r\n            this.drawSprite(sprite);\r\n        });\r\n    }\r\n    drawSprite(sprite) {\r\n        sprite.draw(this.canvas);\r\n    }\r\n    addSprite (sprite) {\r\n        this.sprites.push(sprite);\r\n    }\r\n    deleteSpite () {\r\n        this.sprites[this.selectedIndex].delete();\r\n        this.sprites.splice(this.selectedIndex, 1);\r\n    }\r\n    drop (point) {\r\n        this.selectedIndex = -1;\r\n        let hasFound = false;\r\n        for (let i = this.sprites.length - 1; i > -1; i--) {\r\n            let sprite = this.sprites[i];\r\n            sprite.clearTrack();\r\n            if (!hasFound) {\r\n                this.trackNode = sprite.trackNodePoint(this.trackView, point);\r\n                if (this.trackNode !== -1) {\r\n                    this.selectedIndex = i;\r\n                    hasFound = true;\r\n                }\r\n            }\r\n        }\r\n        if (hasFound) {\r\n            this.sprites[this.selectedIndex].drawTrack(this.trackView, true, this.trackNode);\r\n        }\r\n    }\r\n    dropUp () {\r\n        this.trackNode = -1;\r\n        if (this.selectedIndex !== -1) {\r\n            this.sprites[this.selectedIndex].drawTrack(this.trackView, true, this.trackNode);\r\n        }\r\n    }\r\n    drag (offset) {\r\n        if (this.selectedIndex !== -1) {\r\n            let {width, height} = this.getSize();\r\n            let offsetPoint = {x: offset.x / width, y: offset.y / height};\r\n            let selectedSp = this.sprites[this.selectedIndex];\r\n            if (this.trackNode === Track.Track_NODE.CENTER) {\r\n                selectedSp.move(offsetPoint);\r\n            } else if (this.trackNode !== Track.Track_NODE.NONE) {\r\n                selectedSp.resize(this.trackNode, offsetPoint);\r\n            }\r\n            selectedSp.drawTrack(this.trackView, true, this.trackNode);\r\n        }\r\n    }\r\n    mouseOver (point) {\r\n        let overSprite = null;\r\n        let hasFound = false;\r\n        this.sprites.forEach((sprite, index) => {\r\n            if (index !== this.selectedIndex) {\r\n                sprite.clearTrack();\r\n            }\r\n        });\r\n        for (let i = this.sprites.length - 1; i > -1; i--) {\r\n            let sprite = this.sprites[i];\r\n            this.trackNode = sprite.trackNodePoint(this.trackView, point);\r\n            if (this.selectedIndex === i && this.trackNode !== -1) {\r\n                break;\r\n            }\r\n            if (!hasFound && this.trackNode !== -1) {\r\n                overSprite = sprite;\r\n                hasFound = true;\r\n            }\r\n        }\r\n        if (overSprite) {\r\n            overSprite.drawTrack(this.trackView, false, -1);\r\n        }\r\n    }\r\n    initTrackView (view) {\r\n        this.trackView = view;\r\n    }\r\n}\r\n\r\nexport default Canvas;","import Sprite from './Sprite'\r\n\r\nclass WMImage extends Sprite{\r\n    constructor(props) {\r\n        super(props);\r\n        this.blobUrl = '';\r\n        this.image = new Image();\r\n    }\r\n    setSource (blobUrl, success, error) {\r\n        this.blobUrl = blobUrl;\r\n        this.image.addEventListener('load', () => {\r\n            if (this.relativeRect) {\r\n                let r = this.image.clientWidth / this.image.clientHeight;\r\n                let oriH = this.relativeRect.h;\r\n                this.relativeRect.h = this.relativeRect.w / r;\r\n                this.relativeRect.y -= this.relativeRect.h - oriH;\r\n            }\r\n            if (success) {\r\n                success();\r\n            }\r\n        });\r\n        this.image.addEventListener('error', () => {\r\n            console.log('not support');\r\n            if (error) {\r\n                error();\r\n            }\r\n        });\r\n        this.image.src = this.blobUrl;\r\n    }\r\n    getSource () {\r\n        return this.blobUrl;\r\n    }\r\n    draw (canvas) {\r\n        let {width, height} = canvas;\r\n        if (!this.relativeRect) {\r\n            this.initRelativeRect(\r\n                {width: width, height: height},\r\n                {width: this.image.naturalWidth, height: this.image.naturalHeight},\r\n            );\r\n        }\r\n        let ctx = canvas.getContext('2d');\r\n        let posX = this.relativeRect.x * width;\r\n        let posY = this.relativeRect.y * height;\r\n        let sizeW = this.relativeRect.w * width;\r\n        let sizeH = this.relativeRect.h * height;\r\n        ctx.drawImage(this.image, posX, posY, sizeW, sizeH);\r\n    }\r\n}\r\n\r\nexport default WMImage;","import Track from './Track'\r\n\r\nclass Sprite {\r\n    constructor() {\r\n        this.relativeRect = null;\r\n        this.rotation = 0;\r\n        this.layerIndex = 1;\r\n        this.track = new Track();\r\n    }\r\n    getRelativeRect () {\r\n        return this.relativeRect;\r\n    }\r\n    setRelativeRect (rect) {\r\n        this.relativeRect = {...rect}\r\n    }\r\n    clearRelativeRect () {\r\n        this.relativeRect = null;\r\n    }\r\n    getRotation () {\r\n        return this.rotation;\r\n    }\r\n    setRotation (deg) {\r\n        this.rotation = deg;\r\n    }\r\n    move (offsetPoint) {\r\n        this.relativeRect.x += offsetPoint.x;\r\n        this.relativeRect.y += offsetPoint.y;\r\n    }\r\n    resize (trackNode, offsetPoint, keepRatio = true) {\r\n        let {x, y} = offsetPoint;\r\n        let r = this.relativeRect.w / this.relativeRect.h;\r\n        let oriW = this.relativeRect.w;\r\n        let oriH = this.relativeRect.h;\r\n        switch (trackNode) {\r\n            case 0: {\r\n                let isAdd = (x < 0 || (x === 0 && y > 0));\r\n                if (keepRatio) {\r\n                    this.relativeRect.w += isAdd ? Math.abs(x) : -Math.abs(x);\r\n                    this.relativeRect.h = this.relativeRect.w / r;\r\n                } else {\r\n                    this.relativeRect.w -= x;\r\n                    this.relativeRect.h -= y;\r\n                }\r\n                this.relativeRect.x -= (this.relativeRect.w - oriW);\r\n                this.relativeRect.y -= (this.relativeRect.h - oriH);\r\n                break;\r\n            }\r\n            case 1: {\r\n                this.relativeRect.h -= y;\r\n                this.relativeRect.y += y;\r\n                break;\r\n            }\r\n            case 2: {\r\n                let isAdd = x > 0 || (x === 0 && y > 0);\r\n                if (keepRatio) {\r\n                    this.relativeRect.w += isAdd ? Math.abs(x) : -Math.abs(x);\r\n                    this.relativeRect.h = this.relativeRect.w / r;\r\n                } else {\r\n                    this.relativeRect.w += x;\r\n                    this.relativeRect.h -= y;\r\n                }\r\n                this.relativeRect.y -= (this.relativeRect.h - oriH);\r\n                break;\r\n            }\r\n            case 3: {\r\n                this.relativeRect.w += x;\r\n                break;\r\n            }\r\n            case 4: {\r\n                let isAdd = x > 0 || (x === 0 && y < 0);\r\n                if (keepRatio) {\r\n                    this.relativeRect.w += isAdd ? Math.abs(x) : -Math.abs(x);\r\n                    this.relativeRect.h = this.relativeRect.w / r;\r\n                } else {\r\n                    this.relativeRect.w += x;\r\n                    this.relativeRect.h += y;\r\n                }\r\n                break;\r\n            }\r\n            case 5: {\r\n                this.relativeRect.h += y;\r\n                break;\r\n            }\r\n            case 6: {\r\n                let isAdd = x < 0 || (x === 0 && y < 0);\r\n                if (keepRatio) {\r\n                    this.relativeRect.w += isAdd ? Math.abs(x) : -Math.abs(x);\r\n                    this.relativeRect.h = this.relativeRect.w / r;\r\n                } else {\r\n                    this.relativeRect.w -= x;\r\n                    this.relativeRect.h += y;\r\n                }\r\n                this.relativeRect.x += x;\r\n                break;\r\n            }\r\n            case 7: {\r\n                this.relativeRect.w -= x;\r\n                this.relativeRect.x += x;\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n    draw () {}\r\n    getLayerIndex () {\r\n        return this.layerIndex;\r\n    }\r\n    setLayerIndex (index) {\r\n        this.layerIndex = index;\r\n    }\r\n    initRelativeRect (viewSize, selfSize) {\r\n        let {width, height} = viewSize;\r\n        this.relativeRect = {};\r\n        let r = selfSize.width / selfSize.height;\r\n        this.relativeRect.w = 0.5;\r\n        this.relativeRect.h = width * this.relativeRect.w / r / height;\r\n        this.relativeRect.x = (1 - this.relativeRect.w) / 2;\r\n        this.relativeRect.y = (1 - this.relativeRect.h) / 2;\r\n    }\r\n    getRect (viewSize) {\r\n        let {x, y, w, h} = this.relativeRect;\r\n        let {width, height} = viewSize;\r\n        return {\r\n            x: x * width,\r\n            y: y * height,\r\n            width: w * width,\r\n            height: h * height,\r\n        }\r\n    }\r\n    drawTrack (view, withNode, activeNode) {\r\n        this.track.draw(view, this.relativeRect, this.rotation, withNode, activeNode);\r\n    }\r\n    delete () {\r\n        this.track.clear();\r\n    }\r\n    clearTrack () {\r\n        this.track.clear();\r\n    }\r\n    trackNodePoint (view, point) {\r\n        return this.track.nodePoint(view, this.relativeRect, this.rotation, point);\r\n    }\r\n\r\n    //改变ViewSize后，将Sprite的relativeRect以中心点自适应, 宽度不变\r\n    updateRelativeRect (viewSize, selfSize) {\r\n        let {x, y, w, h} = this.relativeRect;\r\n        let newRelativeRect = {w: w};\r\n        let oldCenterPoint = {\r\n            x: x + w / 2,\r\n            y: y + h / 2,\r\n        };\r\n        let r = selfSize.width / selfSize.height;\r\n        newRelativeRect.h =  viewSize.width * w / r / viewSize.height;\r\n        newRelativeRect.x = oldCenterPoint.x - newRelativeRect.w / 2;\r\n        newRelativeRect.y = oldCenterPoint.y - newRelativeRect.h / 2;\r\n        this.relativeRect = newRelativeRect;\r\n    }\r\n}\r\n\r\nexport default Sprite;","import Canvas from '../core/Canvas'\r\nimport WMImage from '../core/WMImage'\r\nimport {ninvoke} from \"q\";\r\n\r\nlet canvas = new Canvas();\r\nlet editCanvas = null;\r\n\r\nexport default {\r\n    initView: function (view) {\r\n        editCanvas = view;\r\n        editCanvas.parentNode.appendChild(canvas.getCanvas());\r\n    },\r\n    initTrackView: function (view) {\r\n        canvas.initTrackView(view);\r\n    },\r\n    drawCanvas: function () {\r\n        canvas.draw();\r\n    },\r\n    updateCanvasSize: function (size) {\r\n        canvas.updateAllSpriteRelativeRect(size, canvas.getSize());\r\n        canvas.setSize(size);\r\n        canvas.clear();\r\n        canvas.draw();\r\n    },\r\n    addWMImage: function (src) {\r\n        let image = new WMImage();\r\n        image.setSource(src, () => {\r\n            canvas.addSprite(image);\r\n            canvas.drawSprite(image);\r\n            canvas.draw();\r\n        });\r\n    },\r\n    deleteWM: function () {\r\n        canvas.deleteSpite();\r\n        canvas.clear();\r\n        canvas.draw();\r\n    },\r\n    dropDownCanvas: function (point) {\r\n        canvas.drop(point);\r\n    },\r\n    dropUpCanvas: function () {\r\n        canvas.dropUp();\r\n    },\r\n    overCanvas: function (point) {\r\n        canvas.mouseOver(point);\r\n    },\r\n    dragInCanvas: function (offset) {\r\n        canvas.clear();\r\n        canvas.drag(offset);\r\n        canvas.draw();\r\n    },\r\n    export: function () {\r\n        let exportCanvas = document.createElement('canvas');\r\n        let ctx = exportCanvas.getContext('2d');\r\n        let {width, height} = canvas.getSize();\r\n        exportCanvas.width = width;\r\n        exportCanvas.height = height;\r\n        ctx.drawImage(editCanvas, 0, 0, width, height);\r\n        ctx.drawImage(canvas.getCanvas(), 0, 0, width, height);\r\n        exportCanvas.toBlob((data) => {\r\n            let blobUrl = URL.createObjectURL(data);\r\n            let a = document.createElement('a');\r\n            a.download = 'export.png';\r\n            document.body.appendChild(a);\r\n            a.href = blobUrl;\r\n            a.click();\r\n            a.remove();\r\n            URL.revokeObjectURL(blobUrl);\r\n        })\r\n    },\r\n}","import ActionType from \"../../constants/ActionType\";\r\nimport Store from '../../store/Store'\r\n\r\nconst initState = {\r\n    size: {width: 500, height: 500},\r\n    editImage: '',\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case ActionType.INIT_EDIT_VIEW: {\r\n            Store.initView(action.canvas);\r\n            Store.initTrackView(action.trackView);\r\n            return state;\r\n        }\r\n        case ActionType.ADD_WM_IMAGE: {\r\n            Store.addWMImage(action.blobUrl);\r\n            return state;\r\n        }\r\n        case ActionType.ADD_EDIT_IMAGE: {\r\n            let {width, height} = action.editImageSize;\r\n            let r = width / height;\r\n            let size = {};\r\n            if (r > 1) {\r\n                size.width = 500;\r\n                size.height = 500 / r;\r\n            } else {\r\n                size.height = 500;\r\n                size.width = 500 * r;\r\n            }\r\n            Store.updateCanvasSize(size);\r\n            return {\r\n                ...state,\r\n                editImage: action.blobUrl,\r\n                size: size,\r\n            }\r\n        }\r\n        case ActionType.REDRAW: {\r\n            Store.drawCanvas();\r\n            return state;\r\n        }\r\n        case ActionType.EDIT_DROP: {\r\n            Store.dropDownCanvas(action.point);\r\n            return state;\r\n        }\r\n        case ActionType.EDIT_DRAG: {\r\n            Store.dragInCanvas(action.offset);\r\n            return state;\r\n        }\r\n        case ActionType.EDIT_UP: {\r\n            Store.dropUpCanvas();\r\n            return state;\r\n        }\r\n        case ActionType.EDIT_OVER: {\r\n            Store.overCanvas(action.point);\r\n            return state;\r\n        }\r\n        case ActionType.DELETE_SELECTED_SPRITE: {\r\n            Store.deleteWM();\r\n            return state;\r\n        }\r\n        case ActionType.EXPORT: {\r\n            Store.export();\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import  {combineReducers} from 'redux'\r\nimport edit from './edit.reducer'\r\n\r\nexport default combineReducers({\r\n    edit: edit,\r\n})","import React, {Component} from 'react'\r\nimport style from './Edit.module.css'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    initEditViewAction,\r\n    redrawAction, dropAction,\r\n    dragAction,\r\n    upAction,\r\n    overAction,\r\n    deleteSelectedSpriteAction\r\n} from '../redux/actions/EditAction'\r\nimport Util from '../util/Util'\r\n\r\nclass Edit extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.point = {x: 0, y: 0};\r\n        this.isMouseDown = false;\r\n    }\r\n    componentDidMount() {\r\n        this.props.initEditView(this.editCanvas, this.trackView);\r\n        Util.addEvent(document.body, 'mousemove', this.mouseMove);\r\n        Util.addEvent(document.body, 'keydown', this.keyDown);\r\n    }\r\n    componentWillMount() {\r\n        Util.removeEvent(document.body, 'mousemove', this.mouseMove);\r\n        Util.removeEvent(document.body, 'keydown', this.keyDown);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let {editImage} = this.props;\r\n        if (editImage && editImage !== prevProps.editImage) {\r\n            this.drawEditImage();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {size} = this.props;\r\n        return (\r\n            <div  style={{width: size.width, height: size.height}}\r\n                  ref={ele => this.container = ele}\r\n                  onMouseDown={this.mouseDown}\r\n                  className={style.container}>\r\n                <div className={style.editContent}\r\n                     style={{width: size.width, height: size.height}}>\r\n                    <canvas ref={ele => this.editCanvas = ele}\r\n                            style={{width: size.width, height: size.height}}\r\n                            className={style.edit}\r\n                            width={size.width}\r\n                            height={size.height}>\r\n                    </canvas>\r\n                </div>\r\n                <div ref={ele => this.trackView = ele}\r\n                     className={style.trackView} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    mouseDown = (e) => {\r\n        this.isMouseDown = true;\r\n        this.point = this.getPoint(e);\r\n        Util.addEvent(document.body, 'mouseup', this.mouseUp);\r\n        this.props.mouseDownInCanvas(this.point);\r\n    };\r\n    mouseUp = (e) => {\r\n        this.isMouseDown = false;\r\n        Util.removeEvent(document.body, 'mouseup', this.mouseUp);\r\n        this.props.mouseUpInCanvas();\r\n    };\r\n    mouseMove = (e) => {\r\n        let point = this.getPoint(e);\r\n        let offset = {\r\n            x: point.x - this.point.x,\r\n            y: point.y - this.point.y,\r\n        };\r\n        if (this.isMouseDown) {\r\n            this.props.mouseMoveInCanvas(offset);\r\n        } else {\r\n            this.props.mouseOverInCanvas(point);\r\n        }\r\n        this.point = point;\r\n    };\r\n    keyDown = (e) => {\r\n        if (e.key === 'Delete') {\r\n            this.props.deleteSelectedSprite();\r\n        }\r\n    };\r\n    getPoint = (e) => {\r\n        let {left, top} = this.editCanvas.getBoundingClientRect();\r\n        return {\r\n            x: e.clientX - left,\r\n            y: e.clientY - top,\r\n        };\r\n    };\r\n    drawEditImage = () => {\r\n        let {editImage} = this.props;\r\n        let ctx = this.editCanvas.getContext('2d');\r\n        Util.getImageInfo(editImage, (info) => {\r\n            let {image} = info;\r\n            ctx.drawImage(image, 0, 0, this.editCanvas.width, this.editCanvas.height);\r\n            this.props.redraw();\r\n        })\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        size: state.edit.size,\r\n        editImage: state.edit.editImage,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        initEditView: function (canvas, trackView) {\r\n            dispatch(initEditViewAction(canvas, trackView));\r\n        },\r\n        redraw: function () {\r\n            dispatch(redrawAction());\r\n        },\r\n        mouseDownInCanvas: function (point) {\r\n            dispatch(dropAction(point));\r\n        },\r\n        mouseMoveInCanvas: function (offset) {\r\n            dispatch(dragAction(offset));\r\n        },\r\n        mouseUpInCanvas: function () {\r\n            dispatch(upAction());\r\n        },\r\n        mouseOverInCanvas: function (point) {\r\n            dispatch(overAction(point));\r\n        },\r\n        deleteSelectedSprite: function () {\r\n            dispatch(deleteSelectedSpriteAction());\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","import ActionType from '../../constants/ActionType'\r\nimport Util from '../../util/Util'\r\n\r\nexport const addEditImageAction = blobUrl => {\r\n    return (dispatch, getState) => {\r\n        Util.getImageInfo(blobUrl, (info) => {\r\n            let {width, height} = info;\r\n            dispatch({\r\n                type: ActionType.ADD_EDIT_IMAGE,\r\n                blobUrl: blobUrl,\r\n                editImageSize: {width, height}\r\n            });\r\n        })\r\n    };\r\n};\r\n\r\nexport const addWMImageAction = blobUrl => ({\r\n    type: ActionType.ADD_WM_IMAGE,\r\n    blobUrl: blobUrl,\r\n});\r\n\r\nexport const initEditViewAction = (canvas, trackView) => ({\r\n    type: ActionType.INIT_EDIT_VIEW,\r\n    canvas: canvas,\r\n    trackView: trackView,\r\n});\r\n\r\nexport const redrawAction = () => {\r\n    return {\r\n        type: ActionType.REDRAW,\r\n    }\r\n};\r\n\r\nexport const dropAction = (point) => {\r\n    return {\r\n        type: ActionType.EDIT_DROP,\r\n        point: point,\r\n    }\r\n};\r\nexport const dragAction = (offset) => {\r\n    return {\r\n        type: ActionType.EDIT_DRAG,\r\n        offset: offset,\r\n    }\r\n};\r\n\r\nexport const upAction = () => {\r\n    return {\r\n        type: ActionType.EDIT_UP\r\n    }\r\n};\r\n\r\nexport const overAction = (point) => {\r\n    return {\r\n        type: ActionType.EDIT_OVER,\r\n        point: point,\r\n    }\r\n};\r\n\r\nexport const deleteSelectedSpriteAction = () => {\r\n    return {\r\n        type: ActionType.DELETE_SELECTED_SPRITE,\r\n    }\r\n};\r\n\r\nexport const exportAction = () => {\r\n    return {\r\n        type: ActionType.EXPORT,\r\n    }\r\n};","import React, {Component} from 'react'\r\nimport style from './FileInput.module.css'\r\n\r\nclass FileInput extends Component {\r\n    render() {\r\n        let {accept, dataChange} = this.props;\r\n        return <input ref={ele => this.input = ele}\r\n                      className={style.file}\r\n                      onChange={dataChange}\r\n                      type='file'\r\n                      accept={accept}/>;\r\n    }\r\n\r\n    triggerClick = () => {\r\n        this.input.click();\r\n    };\r\n}\r\n\r\nexport default FileInput","import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addEditImageAction, addWMImageAction, exportAction} from '../redux/actions/EditAction'\r\nimport FileInput from './common/FileInput'\r\n\r\nclass Resource extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <button onClick={this.bgHandleClick}>添加圖片</button>\r\n                <button onClick={this.wmHandleClick}>添加圖片水印</button>\r\n                <button onClick={this.export}>导出</button>\r\n                <FileInput ref={ele => this.bgImage = ele} accept='image/*' dataChange={this.bgDataChange}/>\r\n                <FileInput ref={ele => this.wmImage = ele} accept='image/*' dataChange={this.wmDataChange}/>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    bgHandleClick = () => {\r\n        this.bgImage.triggerClick();\r\n    };\r\n    wmHandleClick = () => {\r\n        this.wmImage.triggerClick();\r\n    };\r\n    bgDataChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            this.props.addEditImage(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n    };\r\n    wmDataChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            this.props.addWMImage(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n    };\r\n    export = () => {\r\n        this.props.exportImage();\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addEditImage: function (data) {\r\n            dispatch(addEditImageAction(data));\r\n        },\r\n        addWMImage: function (data) {\r\n            dispatch(addWMImageAction(data));\r\n        },\r\n        exportImage: function () {\r\n            dispatch(exportAction());\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Resource);","import React, { Component } from 'react';\nimport './App.css';\nimport './normalize.css';\nimport {Provider} from 'react-redux'\nimport rootReducer from './redux/reducers/root.reducer'\nimport Edit from './components/Edit'\nimport Resource from './components/Resource'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n          <div className=\"App\">\n            <Edit />\n            <Resource />\n          </div>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}